name: Publish Package

on:
  release:
    types: [published]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install node
        uses: actions/setup-node@v4
        with:
          node-version: "12.x"
          registry-url: "https://registry.npmjs.org"
      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - name: Install Python build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine jupyterlab=4.0 hatchling

      - name: Install frontend dependencies
        run: |
          jlpm install

      - name: Build and publish NPM package
        if: ${{ startsWith(github.event.release.tag_name, 'npm') }}
        run: |
          if [[ ${PRE_RELEASE} == "true" ]]; then export TAG="next"; else export TAG="latest"; fi
          echo Publishing ${VERSION} with distribution tag ${TAG}
          # jlpm lerna version ${VERSION} --yes --no-git-tag-version
          pushd packages/common
          jlpm run publish --access public --tag ${TAG}
          popd
          pushd packages/labextension
          jlpm run publish --access public --tag ${TAG}
          popd
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          PRE_RELEASE: ${{ github.event.release.prerelease }}
          VERSION: ${{ github.event.release.name }}
      - name: Build and publish Python package to PyPI
        if: ${{ !startsWith(github.event.release.tag_name, 'npm') }}
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          jlpm build
          python -m build
          twine upload dist/*
